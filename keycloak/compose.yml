version: "3.9"
services:
  keycloak-postgres:
    image: postgres:14
    container_name: keycloak-postgres
    restart: on-failure
    environment:
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASS}
      POSTGRES_DB: ${POSTGRESQL_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -d postgres
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    deploy:
      resources:
        limits:
          memory: 256M
    networks:
      - keycloak-bridge

  keycloak:
    image: quay.io/keycloak/keycloak:20.0.2
    container_name: keycloak
    restart: always
    command:
      - start --auto-build --db postgres --hostname-strict-https false --hostname-strict false --proxy edge --http-enabled true --import-realm --spi-user-profile-legacy-user-profile-read-only-attributes *_RES_ACCESS_MODE
    environment:
      KC_DB_URL: jdbc:postgresql://keycloak-postgres/${POSTGRESQL_DB}
      KC_DB_USERNAME: ${POSTGRESQL_USER}
      KC_DB_PASSWORD: ${POSTGRESQL_PASS}
      KC_DB_SCHEMA: public
      KC_FEATURES: preview
      KEYCLOAK_ADMIN: ${KC_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KC_PASS}
    expose:
      - 8080:8080
    depends_on:
      - keycloak-postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8080/realms/master"]
      start_period: 10s
      interval: 30s
      retries: 3
      timeout: 5s
    networks:
      - traefik-public
      - keycloak-bridge
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.keycloak-http.rule=Host(`ui.registry.viomitra.ru`)
        - traefik.http.routers.keycloak-http.entrypoints=http
        - traefik.http.routers.registrykeycloak_ui-http.middlewares=https-redirect
        - traefik.http.routers.keycloak-https.rule=Host(`ui.registry.viomitra.ru`)
        - traefik.http.routers.keycloak-https.entrypoints=https
        - traefik.http.routers.keycloak-https.tls=true
        - traefik.http.routers.keycloak-https.tls.certresolver=le
        - traefik.http.services.keycloak.loadbalancer.server.port=80

networks:
  traefik-public:
    external: true
  keycloak-bridge:
    driver: bridge

volumes:
  postgres_data:
    driver: local